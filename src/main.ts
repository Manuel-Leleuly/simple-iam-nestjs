import { HttpStatus } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { WINSTON_MODULE_NEST_PROVIDER } from 'nest-winston';
import { patchNestJsSwagger } from 'nestjs-zod';
import { AppModule } from './app.module';

async function bootstrap() {
  // setup app
  const app = await NestFactory.create(AppModule);

  // setup logger
  const logger = app.get(WINSTON_MODULE_NEST_PROVIDER);
  app.useLogger(logger);

  // setup swagger
  patchNestJsSwagger();

  const swaggerConfig = new DocumentBuilder()
    .setTitle('Simple IAM')
    .setVersion('1.0')
    .setDescription('A simple IAM made by me')
    .setTermsOfService('http://swagger.io/terms')
    .setLicense(
      'Apache 2.0',
      'https://www.apache.org/licenses/LICENSE-2.0.html',
    )
    .setBasePath('/iam')
    .addSecurity('apikey', {
      type: 'apiKey',
      in: 'header',
      name: 'Authorization',
      description: 'use access token generated by the login endpoint',
    })
    .addGlobalResponse({
      status: HttpStatus.INTERNAL_SERVER_ERROR,
      description: 'Internal server error',
    })
    .build();

  const documentFactory = () =>
    SwaggerModule.createDocument(app, swaggerConfig);

  SwaggerModule.setup('/iam/apidocs', app, documentFactory);

  // set prefix
  app.setGlobalPrefix('iam');

  // run app
  await app.listen(process.env.PORT ?? 3000);
}
bootstrap();
